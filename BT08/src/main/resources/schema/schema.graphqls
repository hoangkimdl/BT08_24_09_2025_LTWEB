type User {
    id: ID!
    fullname: String!
    email: String!
    password: String!
    phone: String
}

type Category {
    id: ID!
    name: String!
    description: String
    images: String
}

type Product {
    id: ID!
    title: String!
    quantity: Int
    description: String
    price: Float!
    category: Category!
    user: User!
}

type Query {
    users: [User]
    user(id: ID!): User

    categories: [Category]
    category(id: ID!): Category

    products: [Product]
    product(id: ID!): Product
    productsSortedByPrice: [Product]
    productsByCategory(categoryId: ID!): [Product]
}

type Mutation {
    # User
    addUser(fullname: String!, email: String!, password: String!, phone: String): User
    updateUser(id: ID!, fullname: String, email: String, password: String, phone: String): User
    deleteUser(id: ID!): Boolean

    # Category
    addCategory(name: String!, description: String, images: String): Category
    updateCategory(id: ID!, name: String, description: String, images: String): Category
    deleteCategory(id: ID!): Boolean

    # Product
    addProduct(title: String!, quantity: Int, description: String, price: Float!, categoryId: ID!, userId: ID!): Product
    updateProduct(id: ID!, title: String, quantity: Int, description: String, price: Float, categoryId: ID, userId: ID): Product
    deleteProduct(id: ID!): Boolean
}
